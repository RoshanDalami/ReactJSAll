{"ast":null,"code":"var _jsxFileName = \"/Users/roshandalami/Downloads/React /useEffect&Reducer/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//reducer fucntion should be outside of the component fucntion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'valid') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n\n  // useEffect(()=>{\n\n  //    const identifier = setTimeout(()=>{\n  //     console.log(\"checking form validity\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n  //   return ()=>{\n  //     console.log(\"CleanUp\");\n  //     clearTimeout(identifier)\n  //   }\n\n  // },[enteredEmail,enteredPassword]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(passwordState.isValid && emailState.isValid);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwordState.trim().length > 6);\n    dispatchPassword({\n      type: 'valid'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"7qMEJ4wpC3oVmgshn8dgtBGfmxE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/roshandalami/Downloads/React /useEffect&Reducer/src/components/Login/Login.js"],"sourcesContent":["import React, { useState , useEffect , useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//reducer fucntion should be outside of the component fucntion\nconst emailReducer = (state,action) =>{\n  if(action.type === 'USER_INPUT'){\n    return{value:action.val, isValid: action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return{value: state.value, isValid: state.value.includes('@')};\n  }\n  return {value:'',isValid: false};\n};\nconst passwordReducer = (state,action)=>{\n  if(action.type === 'valid' ){\n    return{value : action.val, isValid : action.val.trim().length > 6}\n  }\n  return {value:'',isValid:false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer,{value:'',isValid:false,});\n\n  const [passwordState,dispatchPassword] = useReducer(passwordReducer,{value:'',isValid:false})\n\n  // useEffect(()=>{\n    \n  //    const identifier = setTimeout(()=>{\n  //     console.log(\"checking form validity\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   },500);\n  //   return ()=>{\n  //     console.log(\"CleanUp\");\n  //     clearTimeout(identifier)\n  //   }\n    \n  // },[enteredEmail,enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type:'USER_INPUT', val:event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n\n   \n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      passwordState.isValid && emailState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type:'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwordState.trim().length > 6);\n    dispatchPassword({type:'valid'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}